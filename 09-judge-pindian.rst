判定与拼点
============

判定和拼点是两个非常质朴的事件——尽管本意如此。
随着各类篡改这两个事件的DIY兴起，这两个事件也越来越复杂……

你可以在技能中使用\ ``Room:judge(judge)``\ 或\ ``Room:pindian(pindian)``\ 来触发对应事件。
这两个事件本质上都是修改传入的数据，所以都可以直接从传入的数据里获取结果。

例如说，当使用仅定义\ ``who``\ /\ ``reason``\ /\ ``pattern``\ 的判定数据触发判定事件后，通过直接获得该数据的\ ``card``\ 属性就能知道当前判定牌。

判定（Judge）
+++++++++++++

判定是最早进入游戏的机制，它的结构\ ``JudgeStruct``\ 如下：

- \ ``who``\ ：判定者

- \ ``card``\ ：当前判定牌，这个一般不事先定义

- \ ``reason``\ ：判定理由

- \ ``pattern``\ ：用于打钩叉的判定

- \ ``skipDrop``\ ：这个控制判定牌是否进入弃牌堆

当一个判定事件产生后，就会触发时机“判定开始时”（\ ``StartJudge``\ ），这个时机一般用来决定判定牌\ ``card``\ （如咒缚，目前也仅有咒缚）；
如果没有决定判定牌，则默认取牌堆顶一张牌作为判定牌。
然后播报一下判定原因，经过锁视技转化后，亮出判定牌，判定正式开始。

判定时，会依次触发两个改判相关时机：“请求改判时”（\ ``AskForRetrial``\ ）和“改判结束时”（\ ``FinishRetrial``\ ）。
大部分的改判操作便在此发生。
这两个时机触发完后，输出此时的判定牌\ ``card``\ ，开始根据判定开始时传入的\ ``pattern``\ 打钩叉。

.. hint::

  然而打钩叉并没有什么卵用，大部分的判定要在判定事件后手动检测判定牌\ ``card``\ 才能决定判定结果。

最后是“判定结束时”（\ ``FinishJudge``\ ），只有这个时机能打断这个判定事件（@皇甫嵩）……

判定事件结束后，判定牌默认会进入弃牌堆，除非该事件被终止或判定数据中\ ``skipDrop``\ 为\ ``true``\ 。

改判（Retrial）
+++++++++++++++++

改判有一个专门的函数\ ``Room:retrial(card, player, judge, skillName, exchange)``\ ，
其中变量的解释为：

- \ ``player``\ ：改判者（打出牌的执行者）

- \ ``card``\ ：用以改判的牌

- \ ``judge``\ ：被改判的判定，这个负责传输数据

- \ ``skillName``\ ：技能名

- \ ``exchange``\ ：这个控制被取代的原判定牌是被\ ``player``\ 获得还是进入弃牌堆

改判时，玩家\ ``player``\ 打出目标牌\ ``card``\ ，但不进入弃牌堆；如果无法打出，将目标牌\ ``card``\ 置于处理区。
然后播报改判信息，将原目标牌交给玩家\ ``player``\ 或进入弃牌堆。
最后重新用锁视技转化现判定牌，至此，改判流程完成。

拼点（Pindian）
+++++++++++++++++++

随着那个男人（是太史慈）的降临，拼点也随之横空出世，它的结构\ ``PindianStruct``\ 如下：

- \ ``from``\ ：拼点发起者

- \ ``fromCard``\ ：拼点发起者所用的拼点牌

- \ ``tos``\ ：拼点目标

- \ ``results``\ ：拼点目标的结果

  这里记载着发起者对\ ``tos``\ 内的每个目标的比较结果，其中\ ``toCard``\ 是对应目标所用的拼点牌；\ ``winner``\ 则是这个比较的结果。

- \ ``reason``\ ：拼点理由

当一个拼点事件产生后，就会触发时机“拼点开始时”（\ ``StartPindian``\ ），这个时机也是一般用来决定拼点牌（如天辩、酣战）的时机；
如果没有决定拼点牌，那么先令拼点发起者\ ``from``\ 选择一张牌作为拼点来源牌\ ``fromCard``\ ；
然后对每个\ ``tos``\ 内的目标依次请求选择一张牌（如果没有事先定义对应的\ ``toCard``\ 的话），这些牌将成为\ ``results``\ 中与目标对应的\ ``toCard``\ 。

当请求结束时，所有相关牌都会被移至处理区，触发时机“拼点牌亮出时”（\ ``PindianCardsDisplayed``\ ）。
然后拼点来源牌与目标对应的牌依次比大小，每次比大小结束后便会输出结果并触发时机“拼点结果确认时”（\ ``PindianResultConfirmed``\ ）。

最后，触发“拼点结束时”（\ ``PindianFinished``\ ），同样，只有这个时机能打断这个判定事件。

一切结束后，处在处理区的所有拼点牌都将进入弃牌堆。